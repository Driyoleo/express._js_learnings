
Effect Hooks :

- Effects let a component connect to and synchronize with external systems. This includes dealing with network, browser DOM, animations, widgets
  written using a different UI library, and other non-React code.

- in simple language it's like a side effect which runs when a change occurs 

- syntax:
    useEffect(() => {
        <first effect>
        return () =>{
           second effect
        }
    }, [<change>]);

    note : 
        - a particular effect is run only when the value of varibale in <change> changes
        - you can mention multiple varibales in <change> 
        - <first effect> is any type action you want to show in your page in that effect
        - <second effect>

- cases :
    case 1 :
        useEffect(()=>{
            // effect code
        });

        - this effect will run on every render

    case 2 : 
        useEffect(()=>{
            // effect code
        },[]);
        
        - this effect will run only the first time when the code runs

    case 3 : 
        useEffect(()=>{
            // effect code
        },[count]);

        - this effect will run when count value changes

    case 4 : 
        useEffect(()=>{
            // effect code
            return ()=>{
                // ummount code
            }
        })

        - this will return whenever the component which is on the page if unmmounted from the page 
        
extra note :
        - due to strict mode on vite the code is run twice at first render of page to check the code... thus if there is any alert or something 
          will run twice , but it is just for dev in main website it will not happen

    