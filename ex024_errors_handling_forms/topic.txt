# topic learned : error handling in react form hook..

- after setting up our form we can set some parameters  or rules to accept value or doing validation we can say:
- this we can do in a following way :

~ step 1 : 
        adding validation parameters for the input :
        eg..    <input {...register("firstname" ,{required: {value : true , message: "this field is required"} , minLength : {value : 3 , message : "min length is 3"} , maxLength: {value : 15 , message : "max length is 15"}})} type="text" placeholder='firstname' />

        - syntax : 
            <input {...register( "<name>" , { parameter : { value : <value> , message : "< message if the input is not valid>" } } )}>
        
        - some common eg. of parameters.. 
                        - maxLength
                        - minLength
                        - required
                        - etc
~ step 2 : 
        - accessing the error message as output and demanding correction from user
        - most common way : 
            {errors.<name> && <whatever you want to do if error comes>}
        eg. {errors.firstname && <p>this field is required</p> }

        - we can also pass the error to a function and do many required works as we need

        eg. {errors.firstname && correction1(errors.firstname.message)}
        ..
        correction1 function : 
                      function correction1(e){
                            console.log(e)
                            document.getElementById("fnm").innerText = `${e}`
                            return true
                        }
